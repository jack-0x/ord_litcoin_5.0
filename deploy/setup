#!/usr/bin/env bash

set -euxo pipefail

CHAIN=$1
DOMAIN=$2

touch ~/.hushlogin

sed -i -E 's/#?PasswordAuthentication yes/PasswordAuthentication no/' /etc/ssh/sshd_config

mkdir -p \
  /etc/systemd/system/litecoind.service.d \
  /etc/systemd/system/ord.service.d

printf "[Service]\nEnvironment=CHAIN=%s\n" $CHAIN \
  | tee /etc/systemd/system/litecoind.service.d/override.conf \
  > /etc/systemd/system/ord.service.d/override.conf

hostnamectl set-hostname $DOMAIN

apt-get install --yes \
  acl \
  clang \
  libsqlite3-dev\
  libssl-dev \
  pkg-config \
  ufw \
  vim

ufw default allow outgoing
ufw default deny incoming

ufw allow 8080
ufw allow http
ufw allow https
ufw allow ssh

case $CHAIN in
  main)
    ufw allow 9333
    ;;
  signet)
    ufw allow 39333
    ;;
  test)
    ufw allow 19333
    ;;
  *)
    echo "Unknown chain: $CHAIN"
    exit 1
    ;;
esac

ufw --force enable

if ! which litecoind; then
  ./bin/install-litecoin-core-linux
fi

litecoind --version

if [[ ! -e ~/.cargo/env ]]; then
  curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
fi

source ~/.cargo/env

rustup update stable

cargo build --release
if [[ -f /usr/local/bin/ord ]]; then
  mv /usr/local/bin/ord /usr/local/bin/ord.bak
fi
cp target/release/ord /usr/local/bin/ord

id --user litecoin || useradd --system litecoin
id --user ord || useradd --system ord

cp deploy/litecoind.service /etc/systemd/system/
mkdir -p /etc/litecoin
cp deploy/litecoin.conf /etc/litecoin/litecoin.conf
systemctl daemon-reload
systemctl enable litecoind
systemctl restart litecoind

case $CHAIN in
  main)
    COOKIE_FILE_DIR=/var/lib/litecoind
    ;;
  signet)
    COOKIE_FILE_DIR=/var/lib/litecoind/signet
    ;;
  test)
    COOKIE_FILE_DIR=/var/lib/litecoind/testnet3
    ;;
  *)
    echo "Unknown chain: $CHAIN"
    exit 1
    ;;
esac

while [[ ! -f $COOKIE_FILE_DIR/.cookie ]]; do
  echo "Waiting for litecoind…"
  sleep 1
done

setfacl -m ord:x /var/lib/litecoind
setfacl -m ord:x $COOKIE_FILE_DIR
setfacl -dm ord:r $COOKIE_FILE_DIR
setfacl -m ord:r $COOKIE_FILE_DIR/.cookie

cp deploy/ord.service /etc/systemd/system/
systemctl daemon-reload
systemctl enable ord
systemctl restart ord

while ! curl --fail https://$DOMAIN/status; do
  echo "Waiting for ord at https://$DOMAIN/status…"
  sleep 1
done
